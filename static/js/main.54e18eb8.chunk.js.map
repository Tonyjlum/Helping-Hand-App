{"version":3,"sources":["components/navbar.js","const.js","components/donationmodal.js","components/event.js","components/newevent.js","container/event_container.js","components/map.js","container/user_container.js","container/homepagebottom.js","components/guestsponsorbutton.js","components/guestvolunteerbutton.js","components/homepage.js","components/newaccountform.js","container/newusercontainer.js","components/loginform.js","components/editmodal.js","components/confirmvolunteers.js","container/confirmcontainer.js","components/myevent.js","container/myeventcontainer.js","components/mydonation.js","container/donationscontainer.js","container/volunteerdonations.js","components/about.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","navbarForUser","_this","props","state","currentUser","id","react_default","a","createElement","className","Button","onClick","history","push","variant","removeCurrentUser","localStorage","removeItem","_this2","this","Navbar","bg","Brand","Nav","Link","sponsor","concat","total_donations","credit","email","Component","withRouter","connect","type","payload","ENDPOINT","DEFAULTSTATE","events","location","confirm_event_info","donations","userEvents","GEOAPI","DonationModal","donationAmount","handleChange","e","setState","Object","defineProperty","target","value","handleSubmit","onHide","fetch","Const","method","headers","Content-Type","Accept","body","JSON","stringify","event_id","event","sponsor_id","amount_per_volunteer","then","response","json","addToDonations","updatedEvents","updateEvents","updateEventDonations","UpdateEvents","new_event","map","new_donation","objectSpread","toConsumableArray","Modal","size","aria-labelledby","centered","show","Header","Title","title","Body","description","Form","onChange","Group","controlId","Label","Control","defaultValue","min","max","Text","Footer","donation","updated_confrim","Event","userButtonToggle","sponsorButtonToggle","fundedColor","joinEventButton","slot","disabled","handleClick","userButton","max_volunteers","confirms","length","c","user_id","includes","sponsorButton","toggleSponsorButton","sponsorCount","eventDiscription","slice","addConfirms","addEventsToStore","Card","border","changeLocation","dist_default","locale","format","datetime","coordinator_name","donationmodal","RESETSTATE","discription","address","lat","long","NewEvent","preventDefault","geolocation","status","alert","position","latitude","results","geometry","longitude","lng","addLocationToStore","postNewEvent","coordinator_id","addEventToStore","addEventsToUser","onSubmit","Row","Col","xs","required","placeholder","user","EventContainer","filteredEvents","filter","Date","parse","renderEventCards","total_donation","reduce","b","components_event","key","reponse","sponsor_logged_in","newevent","CardColumns","MapDisplay","renderPin","currentIcon","L","icon","iconUrl","iconSize","index","Marker","Popup","navigator","getCurrentPosition","coords","Map","animate","style","height","width","center","zoom","TileLayer","url","UserContainer","event_container","HomepageBottomContainer","CardGroup","Img","src","heigh","GuestSponsorButton","password","sponsorAccount","markSponsorInStore","addLoginAccountToStore","setItem","account","GuestVolunteerButton","volunteerAccount","Homepage","Fragment","alt","guestvolunteerbutton","guestsponsorbutton","homepagebottom","NewAccountFrom","first_name","last_name","accountType","lg","NewUserContainer","showButton","showForm","handlebuttonselect","selection","newaccountform","LoginForm","align","name","EditModal","updated_event","updatedCEI","updateCEI","updateConfirms","cei","ConfirmVolunteer","confirm","attendee_name","attendee_email","handleRadio","checked","attend","ConfirmContainer","renderConfrims","confirmvolunteers","attended_id","current_event","PureComponent","MyEvent","editModalShow","confirmContainerModalShow","renderButtons","renderButtonsofPassEvents","renderButtonsofUpcomingEvents","attendance","handleDelete","handleLeave","filterDeletedConfirm","filteredConfirms","filterDeletedEventFromCEI","toggleEditModal","toggleConfrimModal","destroyed_confirm_id","date","editmodal","confirmcontainer","MyEventContainer","renderMyEvents","cli","myevent","renderEventStats","count","MyDonation","numberOfVolunteer","event_datetime","current_number_of_confirms","number_of_attended","volunteerCount","total_donation_for_event","event_title","event_description","DonationContainer","renderDonations","mydonation","VolunteerDonations","About","App","renderHomepage","homepage","renderStatic","navbar","renderUserContainer","user_container","renderNewMemeber","newusercontainer","renderLoginForm","loginform","renderMyEventContainer","myeventcontainer","renderMyDonationContainer","donationscontainer","renderDonationsPage","volunteerdonations","renderAbout","about","token","getItem","BrowserRouter","Route","path","component","exact","Boolean","window","hostname","match","store","createStore","arguments","undefined","action","ReactDOM","render","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54e18eb8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { withRouter} from \"react-router-dom\"\nimport { Navbar, Nav, Button } from 'react-bootstrap'\n\nclass NavigationBar extends Component {\n\n\n  navbarForUser = () => {\n    if (this.props.state.currentUser.id === null){\n      return(\n        <div className=\"space-button\">\n        <Button\n          onClick = {() => this.props.history.push(\"/newmember\")}\n          variant=\"outline-info\">\n          Become a Member</Button>\n        <Button\n          onClick = {() => this.props.history.push(\"/login\")}\n          variant=\"outline-info\"> Sign in</Button>\n        </div>\n      )\n    } else {\n      return(\n        <div className=\"log-out-button\">\n          <Button\n            onClick = {() => {\n              this.props.history.push(\"/\")\n              this.props.removeCurrentUser()\n              localStorage.removeItem(\"user\")\n            }}\n            variant=\"outline-info\"\n          > Sign out\n          </Button>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" >\n        <Navbar.Brand onClick = {() => this.props.history.push(\"/\")}>\n        HelpingHand</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          {this.props.state.currentUser.id && <Nav.Link onClick = {() => this.props.history.push(\"/events\")}>How Can I Help?</Nav.Link>}\n          {this.props.state.sponsor ?\n            (<Nav.Link onClick = {() => this.props.history.push(\"/contribution\")}>My Contributions</Nav.Link>) :\n            (this.props.state.currentUser.id && <Nav.Link onClick = {() => this.props.history.push(\"/attending\")}>My Events</Nav.Link>)}\n        </Nav>\n        <Navbar.Brand >\n          {this.props.state.sponsor && `Total Contribution: $ ${this.props.state.currentUser.total_donations}.00`}\n          {this.props.state.sponsor === false &&\n            this.props.state.currentUser.id !== null &&\n            `Credit Earned: $ ${this.props.state.currentUser.credit}.00`}\n        </Navbar.Brand>\n        <Navbar.Brand>\n        {this.props.state.currentUser.email}\n        </Navbar.Brand>\n        {this.navbarForUser()}\n      </Navbar>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {state}\n}\n\nconst mapDispatchToProps = {\n  removeCurrentUser: () => ({type:\"REMOVE_CURRENT_USER\", payload: {id: null}})\n}\n\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavigationBar))\n","export const ENDPOINT = \"https://helpinghandapi.herokuapp.com/\"\n\nexport const DEFAULTSTATE = {events: [], location: [40.715280, -73.954260], currentUser: {id: null, confirm_event_info: [], donations: []}, userEvents: [], sponsor: false}\n\nexport const TESTSPONSOR = ({\n  \"id\": 1,\n  \"first_name\": \"Bill\",\n  \"last_name\": \"Gates\",\n  \"credit\": 1997010,\n  \"total_donations\": 2990,\n  \"donations\": [\n    {\n      \"id\": 1,\n      \"event_id\": 1,\n      \"sponsor_id\": 1,\n      \"amount_per_volunteer\": 100,\n      \"sponsor_name\": \"Bill Gates\"\n    },\n    {\n      \"id\": 4,\n      \"event_id\": 2,\n      \"sponsor_id\": 1,\n      \"amount_per_volunteer\": 55,\n      \"sponsor_name\": \"Bill Gates\"\n    }\n  ]\n})\n\nexport const GEOAPI = `AIzaSyA-kXyO4hu_HuTp2rb36ub5Adun3uY88n8`\n","import React, { Component } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport * as Const from '../const.js'\n\nclass DonationModal extends Component {\n  state = {\n    donationAmount: 5\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = () => {\n    this.props.onHide()\n    fetch(`${Const.ENDPOINT}donations`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\" : \"application/json\",\n        \"Accept\" : \"application/json\"\n      },\n      body: JSON.stringify({\n        event_id: this.props.event.id,\n        sponsor_id: this.props.state.currentUser.id,\n        amount_per_volunteer: this.state.donationAmount\n      })\n    })\n    .then(response => response.json())\n    .then( json => {\n      this.props.addToDonations(json)\n      const updatedEvents = this.updateEvents(this.updateEventDonations(json))\n      this.props.UpdateEvents(updatedEvents)\n    })\n\n  }\n\n  updateEvents = (new_event) => {\n    return this.props.state.events.map( event => {\n      if (new_event.id === event.id) {\n        return new_event\n      } else {\n        return event\n      }\n    })\n  }\n\n  updateEventDonations = (new_donation) => {\n    return {...this.props.event, donations: [...this.props.event.donations, new_donation]}\n  }\n\n  render() {\n\n    return (\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show= {this.props.show}\n      >\n        <Modal.Header >\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n          {this.props.event.title}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{this.props.event.description}</Modal.Body>\n        <Modal.Body>\n          <Form onChange={this.handleChange} >\n            <Form.Group controlId=\"donationAmount\">\n              <Form.Label>Your Contribution</Form.Label>\n              <Form.Control\n                type=\"number\"\n                defaultValue={this.state.donationAmount}\n                min = \"5\"\n                max = \"200\"\n              />\n            <Form.Text className=\"text-muted\" ></Form.Text>\n          </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide} >Close</Button>\n          <Button onClick={this.handleSubmit} >Sponsor Event</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {state}\n}\n\nconst mapDispatchToProps = {\n  addToDonations: (donation) => ({\n    type: \"ADD_DONATIONS_TO_USER\",\n    payload: donation\n  }),\n  UpdateEvents: (updated_confrim) => ({\n    type: \"ADD_DONATIONS_TO_EVENT\",\n    payload: updated_confrim\n  })\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DonationModal)\n","import React, { Component } from 'react';\nimport { Button, Card } from 'react-bootstrap'\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux'\nimport DonationModal from './donationmodal.js'\nimport * as Const from '../const.js'\n\nclass Event extends Component {\n  state = {\n    userButtonToggle: false,\n    sponsorButtonToggle: false\n  }\n\n  fundedColor = () => {\n    return this.props.donation === 0 ? \"danger\" : \"primary\"\n  }\n\n  joinEventButton = (slot) => {\n    return <Button disabled={this.state.userButtonToggle} onClick={() => {this.handleClick(this.props.event.id)}} size=\"sm\"> {`Join: ${slot} slots left`}</Button>\n  }\n\n  userButton = () => {\n    const slot = this.props.event.max_volunteers - this.props.event.confirms.length\n    const already_attending = this.props.event.confirms.map(c => c.user_id).includes(this.props.state.currentUser.id)\n    if (already_attending) {\n      return <strong>Attending</strong>\n    } else {\n      return slot > 0 ? this.joinEventButton(slot) : `This event is full`\n    }\n  }\n\n  sponsorButton = () => {\n    const sponsor_ids = this.props.event.donations.map( donation => donation.sponsor_id)\n    if (!sponsor_ids.includes(this.props.state.currentUser.id)){\n      return <Button size=\"sm\" onClick={this.toggleSponsorButton}>Sponsor This Event</Button>\n    }\n  }\n\n  toggleSponsorButton = () => {\n    this.setState({\n      sponsorButtonToggle: !this.state.sponsorButtonToggle\n    })\n  }\n\n  sponsorCount = () => {\n    if (this.props.event.donations.length > 1) {\n      return ` ${this.props.event.donations.length} sponsors`\n    } else {\n      return \" a sponsor\"\n    }\n  }\n\n  eventDiscription = () =>{\n    if (this.props.event.description.length > 160) {\n      return `${this.props.event.description.slice(0,157)}...`\n    } else {\n      return this.props.event.description\n    }\n  }\n\n  handleClick = (event_id) => {\n    this.setState({\n      userButtonToggle: !this.state.userButtonToggle\n    })\n    fetch(`${Const.ENDPOINT}confirms`,{\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: this.props.state.currentUser.id,\n        event_id: event_id\n      })\n    })\n    .then(response => response.json())\n    .then(confirm_event_info => this.props.addConfirms(confirm_event_info))\n    .then(fetch(`${Const.ENDPOINT}events`)\n      .then(response => response.json())\n      .then (events => this.props.addEventsToStore(events))\n    )\n  }\n\n  render(props) {\n    return (\n      <Card\n        border={this.fundedColor()}\n        className=\"shadow\"\n        onClick={() => this.props.changeLocation(this.props.event)}>\n        <Card.Body className=\"shadow-sm\">\n          <Card.Title>{this.props.event.title}</Card.Title>\n          <Card.Text><small>{this.eventDiscription()}</small></Card.Text>\n          <Card.Text>\n            <small>\n              <Moment\n              locale=\"en\"\n              format=\"MMMM DD, YYYY\"\n              className= \"date-event-card\"\n              >\n                {this.props.event.datetime}\n              </Moment>\n              &nbsp;at&nbsp;\n              <Moment\n              format=\"LT\"\n              className=\"time-event-card\"\n              >\n                {this.props.event.datetime}\n              </Moment>\n            </small>\n          </Card.Text>\n          {this.props.state.sponsor ? this.sponsorButton() : this.userButton()}\n        </Card.Body>\n        <Card.Footer>\n          <small> Coordinated by: {this.props.event.coordinator_name}</small> <br />\n          <small className=\"text-muted\">\n            {this.props.donation ? `Funded: $${this.props.donation} by ${this.sponsorCount()}` : \"This project has not been funded\"}\n          </small>\n        </Card.Footer>\n        <DonationModal show={this.state.sponsorButtonToggle} onHide={this.toggleSponsorButton} event={this.props.event} />\n      </Card>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {state}\n}\n\nconst mapDispatchToProps = {\n  addEventsToStore: (events) => ({type: \"ADD_EVENTS\", payload: events}),\n  addConfirms: (confirm_event_info) => ({type: \"ADD_CONFIRMS\", payload: confirm_event_info}),\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Event);\n","import React, { Component } from 'react';\nimport { Form, Button, Row, Col} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport * as Const from '../const.js'\n\nconst RESETSTATE = {\n  datetime: \"\",\n  title: \"\",\n  discription: \"\",\n  max_volunteers: \"\",\n  address: \"\",\n  lat: 0,\n  long: 0\n}\n\nclass NewEvent extends Component {\n  state = RESETSTATE\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${this.state.address}&key=${Const.GEOAPI}`)\n    .then(response => response.json())\n    .then( geolocation => {\n      if (geolocation.status === \"ZERO_RESULTS\"){\n        return alert(`${this.state.address} is not a valid address. Please try a different address`)\n      } else {\n        const position = {\n          latitude: geolocation.results[0].geometry.location.lat,\n          longitude: geolocation.results[0].geometry.location.lng\n        }\n        this.props.addLocationToStore(position)\n        this.setState({\n          lat: geolocation.results[0].geometry.location.lat,\n          long: geolocation.results[0].geometry.location.lng\n        }, () => this.postNewEvent())\n      }\n    })\n  }\n\n  postNewEvent = () => {\n    fetch(`${Const.ENDPOINT}events`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        coordinator_id: this.props.state.currentUser.id,\n        datetime: this.state.datetime,\n        title: this.state.title,\n        max_volunteers: this.state.max_volunteers,\n        address: this.state.address,\n        description: this.state.discription,\n        lat: this.state.lat,\n        long: this.state.long\n      })\n    })\n    .then(response => response.json())\n    .then(json => {\n      this.props.addEventToStore(json)\n      fetch(`${Const.ENDPOINT}users/${json.coordinator_id}`)\n      .then(response => response.json())\n      .then(json => this.props.addEventsToUser(json))\n    })\n    .then(() => this.setState(RESETSTATE))\n  }\n\n  render() {\n    return (\n      <Form\n        className= \"new-event-form\"\n        onChange={this.handleChange}\n        onSubmit={this.handleSubmit}>\n        <Row>\n          <Col xs={5}>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Event Title:</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              value={this.state.title}\n              size=\"sm\"\n            />\n            <Form.Text className=\"text-muted\">\n            </Form.Text>\n          </Form.Group>\n          </Col>\n          <Col xs={7}>\n          <Form.Group controlId=\"discription\">\n            <Form.Label>Discription: </Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"e.g. clean up Riegelmann Boardwalk at Coney Island\"\n              value={this.state.discription}\n              size=\"sm\"\n            />\n            <Form.Text className=\"text-muted\">\n            </Form.Text>\n          </Form.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={5}>\n          <Form.Group controlId=\"address\">\n            <Form.Label>Address: </Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              value={this.state.address}\n              size=\"sm\"\n            />\n            <Form.Text className=\"text-muted\">\n            </Form.Text>\n          </Form.Group>\n          </Col>\n          <Col xs={2}>\n          <Form.Group controlId=\"max_volunteers\">\n            <Form.Label>Volunteers:</Form.Label>\n            <Form.Control\n              required\n              type=\"number\"\n              value={this.state.max_volunteers}\n              size=\"sm\"\n            />\n            <Form.Text className=\"text-muted\">\n            </Form.Text>\n          </Form.Group>\n          </Col>\n          <Col xs={5}>\n          <Form.Group controlId=\"datetime\">\n            <Form.Label>Date and Time</Form.Label>\n            <Form.Control\n              required\n              type=\"datetime-local\"\n              value={this.state.datetime.slice(0,16)}\n              size=\"sm\"\n            />\n            <Form.Text className=\"text-muted\">\n            </Form.Text>\n          </Form.Group>\n          </Col>\n        </Row>\n        <Button variant=\"primary\" type=\"submit\" size=\"sm\">\n          Plan the event!\n        </Button>\n      </Form>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {state}\n}\n\nconst mapDispatchToProps = {\n  addEventToStore: (event) => ({type: \"ADD_NEW_EVENT\", payload: event}),\n  addEventsToUser:(user) =>({type:\"ADD_LOGIN_ACCOUNT_TO_STORE\", payload:user}),\n  addLocationToStore: (location) => ({type: \"ADD_CURRENT_LOCATION\", payload: location})\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewEvent)\n","import React, { Component } from 'react';\nimport Event from '../components/event.js'\nimport { CardColumns } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport NewEvent from '../components/newevent.js'\nimport * as Const from '../const.js'\n\nclass EventContainer extends Component {\n\n  componentDidMount() {\n    fetch(`${Const.ENDPOINT}events`)\n    .then(reponse => reponse.json())\n    .then(events => this.props.addEventsToStore(events))\n  }\n\n  filteredEvents = () => {\n    return this.props.events.filter( event => {\n      return Date.parse(event.datetime) > Date.parse(new Date())\n    })\n  }\n\n  renderEventCards = () => {\n    return this.filteredEvents().map( event => {\n      const total_donation = event.donations.map( e => e.amount_per_volunteer).reduce((a,b) => a + b, 0)\n      return (\n        <Event\n          key={event.id}\n          event={event}\n          donation={total_donation}\n          changeLocation={this.changeLocation}\n        />\n      )\n    })\n  }\n\n  changeLocation = (event) => {\n    const position = {latitude: event.lat, longitude: event.long}\n    this.props.addLocationToStore(position)\n  }\n\n  render() {\n    return (\n      <div className=\"event-container\">\n        <div className=\"form-container\">\n          {!this.props.sponsor_logged_in && <NewEvent />}\n        </div>\n        <br/>\n        <div className=\"event-cards-container\">\n          <CardColumns className=\"event-card-columns\">\n            {this.renderEventCards()}\n          </CardColumns>\n          </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {events: state.events, sponsor_logged_in: state.sponsor}\n}\n\nconst mapDispatchToProps = {\n  addEventsToStore: (events) => ({type: \"ADD_EVENTS\", payload: events}),\n  addLocationToStore: (location) => ({type: \"ADD_CURRENT_LOCATION\", payload: location})\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventContainer);\n","import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\nimport L from 'leaflet'\nimport { connect } from 'react-redux'\n\n//alt map link\n//\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/rastertiles/voyager/{z}/{x}/{y}.png\"\nclass MapDisplay extends Component {\n\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition( position => {\n      this.props.addLocationToStore(position.coords)\n    })\n  }\n\n  filteredEvents = () => {\n    return this.props.events.filter( event => {\n      return Date.parse(event.datetime) > Date.parse(new Date())\n    })\n  }\n\n  renderPin = () => {\n    let currentIcon = L.icon({\n      iconUrl: 'https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon-2x.png',\n      iconSize: [18, 30]\n    })\n    return this.filteredEvents().map( (event, index) => {\n      const position = [event.lat, event.long]\n      return (\n        <Marker key={index} position={position} icon={currentIcon}>\n          <Popup>\n            {event.description}\n          </Popup>\n        </Marker>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <Map\n        className= \"map-display\"\n        animate={true}\n        style={{height: '93vh', width: '100%' }}\n        center={this.props.location}\n        zoom={14}\n      >\n        <TileLayer\n          url=\"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png\"\n        />\n        {this.renderPin()}\n      </Map>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\nconst mapDispatchToProps = {\n  addLocationToStore: (location) => ({type: \"ADD_CURRENT_LOCATION\", payload: location})\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapDisplay)\n","import React, { Component } from 'react';\nimport EventContainer from './event_container.js'\nimport MapDisplay from '../components/map.js'\n\n\nclass UserContainer extends Component {\n\n  render() {\n    return (\n      <div className= \"user-container\">\n        <MapDisplay className=\"map-display\" />\n        <EventContainer className=\"event-container\" />\n      </div>\n    );\n  }\n\n}\n\nexport default UserContainer;\n","import React from 'react'\nimport {CardGroup, Card} from 'react-bootstrap'\n\nconst HomepageBottomContainer = () => {\n  return (\n    <CardGroup>\n      <Card className=\"home-card\">\n      </Card>\n      <Card className=\"home-card\">\n        <Card.Img\n          variant=\"top\"\n          src=\"https://image.flaticon.com/icons/svg/1006/1006652.svg\"\n          heigh=\"50px\"\n        />\n        <Card.Body>\n        <Card.Text>\n          <h3 className=\"center\"> ORGANIZE</h3>\n          <div className=\"text-muted center\">Organize an event to invoke the change and inspire the community to come together for the greater good.</div>\n        </Card.Text>\n        </Card.Body>\n      </Card>\n    <Card className=\"home-card\">\n      <Card.Img\n        variant=\"top\"\n        src=\"https://image.flaticon.com/icons/svg/1006/1006623.svg\"\n        heigh=\"50px\"\n      />\n      <Card.Body>\n      <Card.Text>\n        <h3 className=\"center\"> DISCOVER</h3>\n        <div className=\"text-muted center\">Find others like yourself with the same passion.</div>\n      </Card.Text>\n      </Card.Body>\n    </Card>\n    <Card className=\"home-card\">\n      <Card.Img\n        variant=\"top\"\n        src=\"https://image.flaticon.com/icons/svg/1534/1534938.svg\"\n        heigh=\"50px\"\n      />\n      <Card.Body>\n      <Card.Text>\n        <h3 className=\"center\"> GIVE </h3>\n        <div className=\"text-muted center\">While attending events, volunteers will earn a credited amount to donate to a charity of their choice.</div>\n      </Card.Text>\n      </Card.Body>\n    </Card>\n    <Card className=\"home-card\">\n    </Card>\n    </CardGroup>\n  )\n}\n\nexport default HomepageBottomContainer\n","import React, { Component } from 'react';\nimport {Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { withRouter} from \"react-router-dom\"\nimport * as Const from '../const.js'\n\nclass GuestSponsorButton extends Component {\n\n  handleClick = () =>{\n    fetch(`${Const.ENDPOINT}sponsors/login`,{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: \"TestAccount@gmail.com\",\n        password: \"123\"\n      })\n    })\n    .then(response => response.json())\n    .then(sponsorAccount => {\n      this.props.removeCurrentUser()\n      localStorage.removeItem(\"user\")\n      this.props.markSponsorInStore()\n      this.props.addLoginAccountToStore(sponsorAccount)\n      localStorage.setItem(\"user\", sponsorAccount.id)\n      localStorage.setItem(\"accountType\", \"sponsors\")\n      this.props.history.push(\"/events\")\n    })\n  }\n\n  render() {\n    return <Button onClick={this.handleClick} variant=\"info\" size= \"sm\">Sponsor Test Account</Button>\n  }\n}\n\nconst mapDispatchToProps = {\n  addLoginAccountToStore: (account) => ({\n    type: \"ADD_LOGIN_ACCOUNT_TO_STORE\",\n    payload: account\n  }),\n  markSponsorInStore: () => ({\n    type:\"LOGGED_IN_AS_SPONSOR\"\n  }),\n  removeCurrentUser: () => ({\n    type:\"REMOVE_CURRENT_USER\",\n    payload: {id: null}})\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(GuestSponsorButton))\n","import React, { Component } from 'react';\nimport {Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { withRouter} from \"react-router-dom\"\nimport * as Const from '../const.js'\n\n\nclass GuestVolunteerButton extends Component {\n\n  handleClick = () =>{\n    fetch(`${Const.ENDPOINT}users/login`,{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: \"VolunteerTestAccount@gmail.com\",\n        password: \"123\"\n      })\n    })\n    .then(response => response.json())\n    .then(volunteerAccount => {\n      this.props.removeCurrentUser()\n      localStorage.removeItem(\"user\")\n      this.props.addLoginAccountToStore(volunteerAccount)\n      localStorage.setItem(\"user\", volunteerAccount.id)\n      localStorage.setItem(\"accountType\", \"users\")\n      this.props.history.push(\"/events\")\n    })\n  }\n\n  render() {\n    return <Button onClick={this.handleClick} variant=\"info\" size= \"sm\">Volunteer Test Account</Button>\n  }\n}\n\nconst mapDispatchToProps = {\n  addLoginAccountToStore: (account) => ({\n    type: \"ADD_LOGIN_ACCOUNT_TO_STORE\",\n    payload: account\n  }),\n  removeCurrentUser: () => ({\n    type:\"REMOVE_CURRENT_USER\",\n    payload: {id: null}})\n}\n\n\nexport default withRouter(connect(null, mapDispatchToProps)(GuestVolunteerButton))\n","import React from 'react'\nimport HomepageBottomContainer from '../container/homepagebottom.js'\nimport GuestSponsorButton from './guestsponsorbutton.js'\nimport GuestVolunteerButton from './guestvolunteerbutton.js'\n\n\nconst Homepage = () => {\n  return(\n    <>\n      <div className= \"homepage-top\">\n        <img\n          src=\"https://i.ibb.co/hDvg3YG/Untitled.png\"\n          alt=\"Be the change you want to see in the world Plan it with Helping Hand and let the world know how they can help.\"\n          width= \"100%\"\n          position= \"absolute\"\n          />\n        <div className=\"landing-text\">\n          <h1>Be the change <br />you want to see in the world</h1><br />\n          <h4>Plan it with Helping Hand and <br /> let the world know how they can help.</h4>\n          <GuestVolunteerButton />\n          <GuestSponsorButton />\n        </div>\n      </div>\n      <HomepageBottomContainer className=\"homepage-bottom\" />\n    </>\n  )\n}\n\nexport default Homepage\n","import React, { Component } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { withRouter} from \"react-router-dom\"\nimport * as Const from '../const.js'\n\nclass NewAccountFrom extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    fetch(`${Const.ENDPOINT}${this.props.accountType}`,{\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        first_name: this.state.first_name,\n        last_name: this.state.last_name\n      })\n    })\n    .then(response => response.json())\n    .then(user => {\n      this.props.addLoginAccountToStore(user)\n      this.props.history.push(\"/login\")\n    })\n  }\n\n\n  render() {\n    return (\n      <Form\n        onChange={this.handleChange}\n        onSubmit={this.handleSubmit}\n        className=\"justify-content-md-center\"\n      >\n      <Col xs lg=\"12\">\n      <h1>Welcome to Helping Hand</h1>\n      <br /><br />\n      <Form.Group controlId=\"first_name\">\n        <Form.Label>First Name:</Form.Label>\n        <Form.Control type=\"text\" value={this.state.first_name} />\n        <Form.Text className=\"text-muted\">\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"last_name\">\n        <Form.Label>Last Name:</Form.Label>\n        <Form.Control type=\"text\" value={this.state.last_name} />\n        <Form.Text className=\"text-muted\">\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"email\">\n        <Form.Label>Email:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"yourname@example.com\"\n          value={this.state.email}\n        />\n        <Form.Text className=\"text-muted\">\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"password\">\n        <Form.Label>Password:</Form.Label>\n        <Form.Control type=\"password\" value={this.state.password} />\n        <Form.Text className=\"text-muted\">\n        </Form.Text>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" >\n        Make Account\n      </Button>\n      </Col>\n      </Form>\n    );\n  }\n\n}\n\nconst mapDispatchToProps = {\n  addLoginAccountToStore: (account) => ({type: \"ADD_LOGIN_ACCOUNT_TO_STORE\", payload: account})\n}\n\n\nexport default withRouter(connect(null, mapDispatchToProps) (NewAccountFrom))\n","import React, { Component } from 'react';\nimport NewAccountFrom from '../components/newaccountform.js'\nimport {Button, Row, Col} from 'react-bootstrap'\n\nclass NewUserContainer extends Component {\n  state = {\n    showButton: true,\n    showForm: false,\n    accountType: null\n  }\n\n  handlebuttonselect = (selection) => {\n    this.setState({\n      showButton: !this.state.showButton,\n      showForm: !this.state.showForm,\n      accountType: selection\n    })\n  }\n\n  render() {\n    return (\n      <Row className=\"justify-content-md-center\" >\n        <Col xs lg=\"5\" className=\"center\">\n        {this.state.showButton && <Button onClick={()=>{this.handlebuttonselect(\"users\")}}>I want to help as a Volunteer</Button>}\n        <br /><br />\n        {this.state.showButton && <Button onClick={()=>{this.handlebuttonselect(\"sponsors\")}}>I want to help by becoming a Sponsor</Button>}\n        {this.state.showForm && <NewAccountFrom accountType={this.state.accountType} />}\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default NewUserContainer\n","import React, { Component } from 'react';\nimport {Form, Button, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { withRouter} from \"react-router-dom\"\nimport * as Const from '../const.js'\n\nclass LoginForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    accountType: \"\",\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    if (this.state.accountType){\n      fetch(`${Const.ENDPOINT}${this.state.accountType}/login`,{\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      })\n      .then(response => response.json())\n      .then( account => {\n        if (account.id === 0) {\n          return alert(\"Invalid login.\")\n        } else {\n          localStorage.setItem(\"user\", account.id)\n          localStorage.setItem(\"accountType\", this.state.accountType)\n          this.props.addLoginAccountToStore(account)\n          this.props.history.push(\"/events\")\n          if (this.state.accountType === \"sponsors\"){\n            this.props.markSponsorInStore()\n          }\n        }\n      })\n    } else {\n      return alert(\"Please select the account type.\")\n    }\n\n  }\n\n  render(){\n    return(\n      <Form\n        onChange={this.handleChange}\n        onSubmit={this.handleSubmit}\n        className=\"justify-content-md-center\"\n      >\n        <Col xs lg=\"6\">\n          <h1 align= \"center\">Welcome to Helping Hand</h1>\n          <br /><br />\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email:</Form.Label>\n            <Form.Control type=\"text\" value={this.state.email} />\n            <Form.Text className=\"text-muted\">\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password:</Form.Label>\n            <Form.Control type=\"password\" value={this.state.password} />\n            <Form.Text className=\"text-muted\">\n            </Form.Text>\n          </Form.Group>\n          <div className=\"radio-button\">\n            <input\n              type=\"radio\"\n              id=\"accountType\"\n              name=\"accountType\"\n              value=\"sponsors\"\n            />\n              Sponsor\n              &nbsp;&nbsp;\n            <input\n              type=\"radio\"\n              id=\"accountType\"\n              name=\"accountType\"\n              value=\"users\"\n            />\n              Volunteer\n          </div><br /><br />\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </Col>\n      </Form>\n    )\n  }\n}\nconst mapDispatchToProps = {\n  addLoginAccountToStore: (account) => ({type: \"ADD_LOGIN_ACCOUNT_TO_STORE\", payload: account}),\n  markSponsorInStore: () => ({\n    type:\"LOGGED_IN_AS_SPONSOR\"\n  })\n}\n\n\nexport default withRouter(connect(null, mapDispatchToProps)(LoginForm))\n","import React, { Component } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport * as Const from '../const.js'\n\n\nclass EditModal extends Component {\n  state = {\n    description: this.props.event.description,\n    datetime: this.props.event.datetime.slice(0,16),\n    max_volunteers: this.props.event.max_volunteers\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = () => {\n    this.props.onHide()\n    fetch(`${Const.ENDPOINT}events/${this.props.event.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\" : \"application/json\",\n        \"Accept\" : \"application/json\"\n      },\n      body: JSON.stringify({\n        datetime: this.state.datetime,\n        max_volunteers: this.state.max_volunteers,\n        description: this.state.description\n      })\n    })\n    .then(response => response.json())\n    .then( (updated_event) => {\n      const updatedCEI = this.updateCEI(updated_event)\n      this.props.updateConfirms(updatedCEI)\n    })\n  }\n\n  updateCEI = (updated_event) => {\n    return this.props.state.currentUser.confirm_event_info.map( cei => {\n      if (cei.event.id === updated_event.id) {\n        return {...cei, event: updated_event}\n      } else {\n        return cei\n      }\n    })\n  }\n\n\n  render() {\n    return (\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered show= {this.props.show}\n      >\n        <Modal.Header >\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Update:  {this.props.event.title}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onChange={this.handleChange} >\n            <Form.Group controlId=\"description\">\n              <Form.Label>Event Discription</Form.Label>\n              <Form.Control\n                type=\"text\"\n                defaultValue={this.state.description}\n              />\n              <Form.Text className=\"text-muted\" ></Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"datetime\">\n              <Form.Label>Previous Date and Time:</Form.Label>\n              <Form.Control\n                type=\"datetime-local\"\n                defaultValue={this.state.datetime}\n              />\n              <Form.Text className=\"text-muted\"></Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"max_volunteers\">\n              <Form.Label>Volunteers:</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={this.state.max_volunteers}\n                min= {this.props.event.max_volunteers}\n              />\n              <Form.Text className=\"text-muted\"></Form.Text>\n             </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide} >Close</Button>\n          <Button onClick={this.handleSubmit} >Update Event</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {state}\n}\n\nconst mapDispatchToProps = {\n  updateConfirms: (updated_confrim) => ({type: \"UPDATE_CONFIRMS\", payload: updated_confrim})\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditModal);\n","// have an on change on radio button, make it record to the state of its parent\n\nimport React from 'react'\n\nconst ConfirmVolunteer = (props) => {\n  return (\n    <div>\n    {props.confirm.attendee_name}\n    &nbsp;-- {props.confirm.attendee_email}\n    <div className=\"radio-button\" onChange={(e) => {props.handleRadio(props.confirm.id, e.target.value)}}>\n      <input type=\"radio\"\n      id={props.confirm.attendee_email}\n      name={props.confirm.attendee_email}\n      value= {true}\n      checked={props.confirm.attend ? \"checked\" : null}\n      /> Attended\n      &nbsp;&nbsp;\n      <input type=\"radio\"\n      id={props.confirm.attendee_email}\n      name={props.confirm.attendee_email}\n      value={false}\n      checked={props.confirm.attend ? null : \"checked\"}\n      /> Did not attend\n    </div>\n    <hr />\n    </div>\n  )\n}\n export default ConfirmVolunteer\n","import React, { PureComponent } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap'\nimport ConfirmVolunteer from '../components/confirmvolunteers.js'\nimport * as Const from '../const.js'\n\nclass ConfirmContainer extends PureComponent {\n  state= {\n    confirms: []\n  }\n\n  componentDidMount(){\n    fetch(`${Const.ENDPOINT}events/${this.props.event.id}`)\n    .then(response => response.json())\n    .then(current_event => {this.setState({\n      confirms: current_event.confirms\n    })}\n    )\n  }\n\n  renderConfrims = () => {\n    return (this.state.confirms.map( confirm => {\n      return(\n      <ConfirmVolunteer\n        key={confirm.id}\n        confirm={confirm}\n        handleRadio={this.handleRadio}\n      />\n      )\n    }))\n  }\n\n  handleRadio = (id, value) => {\n    this.setState({\n      confirms: this.state.confirms.map( confirm => {\n        if (confirm.id === id){\n          return {...confirm, attend: (value === \"true\" ? true : false)}\n        } else {\n          return confirm\n        }\n      })\n    })\n  }\n\n  handleSubmit = (props) => {\n    this.props.onHide()\n    const attended_id = this.state.confirms.filter( confirm => {\n      return confirm.attend\n    }).map( confirm => {\n      return confirm.id\n    })\n    fetch(`${Const.ENDPOINT}confirms/update_confirms`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\" : \"application/json\",\n        \"Accept\" : \"application/json\"\n      },\n      body: JSON.stringify({attended_id})\n    })\n    // .then( response => response.json())\n    // .then( attended_ids => console.log(attended_ids))\n  }\n\n\n  render() {\n    return (\n      <Modal\n        className=\"confirm-volunteer\"\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show= {this.props.show}\n      >\n        <Modal.Header >\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {this.props.event.title}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <div id=\"confirm-users\">\n              {this.renderConfrims()}\n            </div>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide} >Close</Button>\n          <Button onClick={this.handleSubmit} >Submit Confirms</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nexport default ConfirmContainer;\n","import React, { Component } from 'react';\nimport {Card, Button, Col, Row} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport EditModal from './editmodal.js'\nimport Moment from 'react-moment'\nimport ConfirmContainer from '../container/confirmcontainer.js'\nimport * as Const from '../const.js'\n\nclass MyEvent extends Component {\n  state = {\n    editModalShow : false,\n    confirmContainerModalShow: false\n  }\n\n  renderButtons = (props) => {\n    if (Date.parse(props.event.datetime) < Date.parse(new Date()) ){\n      return this.renderButtonsofPassEvents(props)\n    } else {\n      return this.renderButtonsofUpcomingEvents(props)\n    }\n  }\n\n  renderButtonsofPassEvents = (props) => {\n    if (props.event.coordinator_id === props.currentUser){\n      return (\n        <Button\n          variant=\"outline-success\"\n          size=\"sm\"\n          onClick={() => this.setState({ confirmContainerModalShow: true })}\n        >\n          Confirm Volunteers\n        </Button>)\n    } else {\n      const attendance = props.confirm.attend ? \"Thank you for Volunteering\": \"\"\n      return (<Card.Text>{`Event Completed. ${attendance}`}</Card.Text>)\n    }\n  }\n\n  renderButtonsofUpcomingEvents = (props) => {\n    if (props.event.coordinator_id === props.currentUser){\n      return(\n        <div className=\"space-button\">\n          <Button\n            variant=\"outline-secondary\"\n            size=\"sm\"\n            onClick={() => this.setState({ editModalShow: true })}\n          >\n            Edit Event\n          </Button>\n          <Button\n            variant=\"outline-danger\"\n            size=\"sm\"\n            onClick = {() => {this.handleDelete(props.event.id, props.confirm)}}\n          >\n            Delete Event\n          </Button>\n        </div>\n      )\n    } else {\n      return (\n        <Button\n        variant=\"outline-danger\"\n        size=\"sm\"\n        onClick={()=>{this.handleLeave(props.confirm)}}\n        >\n          Leave Event\n        </Button>\n      )\n    }\n  }\n\n  handleLeave = (confirm) => {\n    fetch(`${Const.ENDPOINT}confirms/${confirm.id}`, {\n      method: \"DELETE\"\n    })\n    .then( response => response.json() )\n    .then( json => this.filterDeletedConfirm(json) )\n    .then( filteredConfirms => this.props.updateConfirms(filteredConfirms))\n  }\n\n  handleDelete = (event_id, confirm) => {\n    fetch(`${Const.ENDPOINT}events/${event_id}`,{\n      method: \"DELETE\"\n    })\n    .then( () => {\n      const updatedCEI = this.filterDeletedEventFromCEI(confirm)\n      this.props.updateConfirms(updatedCEI)\n    })\n  }\n\n  toggleEditModal = () => {\n    this.setState({\n      editModalShow: !this.state.editModalShow\n    })\n  }\n\n  toggleConfrimModal = () => {\n    this.setState({\n      confirmContainerModalShow: !this.state.confirmContainerModalShow\n    })\n  }\n\n  filterDeletedEventFromCEI = (confirm) => {\n    return this.props.state.currentUser.confirm_event_info.filter( cei => {\n      return cei.confirm.id  !== confirm.id\n    })\n  }\n\n  filterDeletedConfirm = (json) => {\n    return this.props.state.currentUser.confirm_event_info.filter( cei => {\n      return cei.confirm.id !== json.destroyed_confirm_id\n    })\n  }\n\n  render(){\n    return (\n      <>\n        <Card.Body className=\"my-event-card\">\n          <Card className=\"text-center\">\n            <Row className=\"justify-content-md-center\">\n              <Col xs={7} className>\n                <Card.Body>\n                  <Card.Title>{this.props.event.title}</Card.Title>\n                  <Card.Text>\n                    <Moment\n                      locale=\"en\"\n                      format=\"MMMM DD, YYYY\"\n                      date={this.props.event.datetime}\n                    />\n                    &nbsp;at&nbsp;\n                    <Moment\n                      locale=\"en\"\n                      format=\"LT\"\n                      date={this.props.event.datetime}\n                    />\n                  </Card.Text>\n                  <Card.Text>{this.props.event.description}</Card.Text>\n                </Card.Body>\n                {this.renderButtons(this.props)}\n              </Col>\n            </Row>\n          </Card>\n        </Card.Body>\n        <EditModal\n          show={this.state.editModalShow}\n          onHide={this.toggleEditModal}\n          event={this.props.event}\n        />\n        <ConfirmContainer\n          show={this.state.confirmContainerModalShow}\n          onHide={this.toggleConfrimModal}\n          event={this.props.event}\n          confirms={this.props.confirm}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {state}\n}\n\n\nconst mapDispatchToProps = {\n  updateConfirms: (updated_confrim) => ({type: \"UPDATE_CONFIRMS\", payload: updated_confrim})\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyEvent)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport MyEvent from '../components/myevent.js'\n\n\nclass MyEventContainer extends Component {\n\n  renderMyEvents = () => {\n    return this.props.state.currentUser.confirm_event_info.map(cli => {\n      return (\n        <MyEvent\n          key={cli.confirm.id}\n          event={cli.event}\n          confirm={cli.confirm}\n          currentUser={this.props.state.currentUser.id}\n        />\n      )\n    })\n  }\n\n  renderEventStats = () => {\n    if (this.props.currentUser.confirm_event_info.count > 1) {\n      return `You have confirmed to ${this.props.currentUser.confirm_event_info.count} events.`\n    } else {\n      return `You have confirmed to ${this.props.currentUser.confirm_event_info.count} event.`\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"my-event-container\">\n        <h1 className=\"center\"> My Events</h1>\n        <br />\n        {this.renderMyEvents()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {state}\n}\n\nexport default connect(mapStateToProps)(MyEventContainer)\n","import React, { Component } from 'react';\nimport {Card, Col, Row} from 'react-bootstrap'\n\nclass MyDonation extends Component {\n\n  numberOfVolunteer = () => {\n    if (Date.parse(this.props.donation.event_datetime) > Date.parse(new Date())) {\n      return `${this.props.donation.current_number_of_confirms} volunteers signed up`\n    } else {\n      return `Number of attendees: ${this.props.donation.number_of_attended}`\n    }\n  }\n\n  volunteerCount = () => {\n    if (Date.parse(this.props.donation.event_datetime) > Date.parse(new Date())){\n      return `${this.props.donation.max_volunteers} spots open`\n    } else {\n      return `$${this.props.donation.total_donation_for_event}.00 contributed for this event `\n    }\n  }\n\n  render() {\n    return (\n      <Card.Body className=\"my-donation-card\">\n        <Card className=\"text-center\">\n          <Row className=\"justify-content-md-center\">\n            <Col xs={7} className>\n              <Card.Body>\n                <Card.Title>{this.props.donation.event_title}</Card.Title>\n                <Card.Text>\n                  {this.props.donation.event_description}<br />\n                  {`Contribution per volunteer: $${this.props.donation.amount_per_volunteer}.00`}<br />\n                  {this.numberOfVolunteer()}\n                </Card.Text>\n              </Card.Body>\n              <Card.Body>\n              <Card.Text>{this.volunteerCount()}</Card.Text>\n              </Card.Body>\n            </Col>\n          </Row>\n        </Card>\n      </Card.Body>\n    )\n  }\n}\n\nexport default MyDonation;\n","import React, { Component } from 'react';\nimport MyDonation from '../components/mydonation'\nimport { connect } from 'react-redux'\n\nclass DonationContainer extends Component {\n\n  renderDonations = () => {\n    return this.props.state.currentUser.donations.map( donation => {\n      return <MyDonation key= {donation.id} donation={donation} />\n    })\n  }\n  render() {\n\n    return (\n      <>\n        <h1 className=\"center\"> My Contributions</h1>\n        {this.renderDonations()}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {state}\n}\n\nexport default connect(mapStateToProps)(DonationContainer)\n","import React, { Component } from 'react';\n\nclass VolunteerDonations extends Component {\n\n  render() {\n    return (\n      <div>\n        Donation Page\n      </div>\n    );\n  }\n\n}\n\nexport default VolunteerDonations;\n","import React from 'react'\n\nconst About = (props) => {\n  return (\n    <div>\n\n    </div>\n  )\n}\n export default About\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css'\nimport NavigationBar from './components/navbar.js'\nimport UserContainer from './container/user_container.js'\nimport Homepage from './components/homepage.js'\nimport NewUserContainer from './container/newusercontainer.js'\nimport LoginForm from './components/loginform.js'\nimport MyEventContainer from './container/myeventcontainer.js'\nimport DonationContainer from './container/donationscontainer.js'\nimport VolunteerDonations from './container/volunteerdonations.js'\nimport About from \"./components/about.js\"\nimport { connect } from 'react-redux'\nimport * as Const from './const.js'\n\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\n\n\nclass App extends Component {\n\n  renderHomepage = () => {\n    return <Homepage />\n  }\n\n  renderStatic = () => {\n    return <NavigationBar />\n  }\n\n  renderUserContainer = () => {\n    return <UserContainer />\n  }\n\n  renderNewMemeber = () => {\n    return <NewUserContainer />\n\n  }\n\n  renderLoginForm = () =>{\n    return <LoginForm />\n  }\n\n  renderMyEventContainer = () => {\n    return <MyEventContainer />\n  }\n\n  renderMyDonationContainer = () => {\n    return <DonationContainer />\n  }\n  renderDonationsPage = () => {\n    //conditionally load depending on user type\n    return <VolunteerDonations />\n  }\n\n  renderAbout = () => {\n    return <About />\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"user\")\n    const accountType = localStorage.getItem(\"accountType\")\n    if (token) {\n      fetch(`${Const.ENDPOINT}${accountType}/${token}`)\n      .then(response => response.json())\n      .then( user => {\n        this.props.addLoginAccountToStore(user)\n        if (accountType === \"sponsors\") {\n          this.props.markSponsorInStore()\n        }\n      })\n\n    } else {\n      //helps wake up Heroku server =D\n      fetch(`${Const.ENDPOINT}`)\n    }\n  }\n\n\n  render() {\n    return (\n      <Router>\n        <>\n          <Route path=\"/\" component={this.renderStatic} />\n          <Route exact path=\"/\" component={this.renderHomepage} />\n          <Route exact path=\"/events\" component={this.renderUserContainer} />\n          <Route exact path=\"/newmember\" component={this.renderNewMemeber} />\n          <Route exact path =\"/login\" component={this.renderLoginForm} />\n          <Route exact path = \"/attending\" component={this.renderMyEventContainer} />\n          <Route exact path = \"/contribution\" component={this.renderMyDonationContainer} />\n          <Route exact path = \"/donation\" component={this.renderDonationsPage} />\n          <Route exact path = \"/about\" component={this.renderAbout} />\n        </>\n      </Router>\n    )\n  }\n}\nconst mapDispatchToProps = {\n  addLoginAccountToStore: (account) => ({type: \"ADD_LOGIN_ACCOUNT_TO_STORE\", payload: account}),\n  markSponsorInStore: () => ({\n    type:\"LOGGED_IN_AS_SPONSOR\"\n  })\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'leaflet/dist/leaflet.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as Const from './const.js'\n\n\nconst reducer = (state = Const.DEFAULTSTATE, action) => {\n  switch(action.type) {\n    case \"ADD_EVENTS\":\n      return {...state, events: action.payload}\n    case \"ADD_CURRENT_LOCATION\":\n      return {...state, location: [action.payload.latitude, action.payload.longitude]}\n    case \"ADD_NEW_EVENT\":\n      return {...state, events: [...state.events, action.payload]}\n    case \"ADD_LOGIN_ACCOUNT_TO_STORE\":\n      return {...state, currentUser: action.payload }\n    case \"UPDATE_CONFIRMS\":\n      return { ...state, currentUser: { ...state.currentUser, confirm_event_info: action.payload} }\n    case \"ADD_CONFIRMS\":\n      return { ...state, currentUser: { ...state.currentUser, confirm_event_info: [...state.currentUser.confirm_event_info, action.payload]} }\n    case \"ADD_DONATIONS_TO_USER\":\n    return {...state, currentUser:{...state.currentUser, donations: [...state.currentUser.donations, action.payload]} }\n    case \"REMOVE_CURRENT_USER\":\n      return {...state, currentUser: action.payload, sponsor: false}\n    case \"LOGGED_IN_AS_SPONSOR\":\n      return {...state, sponsor: true}\n    case \"ADD_DONATIONS_TO_EVENT\":\n      return {...state, events: action.payload}\n    default:\n      return state\n  }\n}\n\nconst store = createStore(reducer)\n\n// store.subscribe(() => {\n//   console.log('the new state is', store.getState())\n//   console.log('----------');\n// })\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}