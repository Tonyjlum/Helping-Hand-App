{"ast":null,"code":"import _classCallCheck from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/src/components/map.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport { connect } from 'react-redux'; //alt map link\n//\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/rastertiles/voyager/{z}/{x}/{y}.png\"\n\nvar MapDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapDisplay, _Component);\n\n  function MapDisplay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapDisplay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapDisplay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.filteredEvents = function () {\n      return _this.props.events.filter(function (event) {\n        return Date.parse(event.datetime) > Date.parse(new Date());\n      });\n    };\n\n    _this.renderPin = function () {\n      var currentIcon = L.icon({\n        iconUrl: 'https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon-2x.png',\n        iconSize: [18, 30]\n      });\n      return _this.filteredEvents().map(function (event, index) {\n        var position = [event.lat, event.long];\n        return React.createElement(Marker, {\n          key: index,\n          position: position,\n          icon: currentIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, event.description));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MapDisplay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this2.props.addLocationToStore(position.coords);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Map, {\n        className: \"map-display\",\n        animate: true,\n        style: {\n          height: '93vh',\n          width: '100%'\n        },\n        center: this.props.location,\n        zoom: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        url: \"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), this.renderPin());\n    }\n  }]);\n\n  return MapDisplay;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nvar mapDispatchToProps = {\n  addLocationToStore: function addLocationToStore(location) {\n    return {\n      type: \"ADD_CURRENT_LOCATION\",\n      payload: location\n    };\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MapDisplay);","map":{"version":3,"sources":["/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/src/components/map.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","L","connect","MapDisplay","filteredEvents","props","events","filter","event","Date","parse","datetime","renderPin","currentIcon","icon","iconUrl","iconSize","map","index","position","lat","long","description","navigator","geolocation","getCurrentPosition","addLocationToStore","coords","height","width","location","mapStateToProps","state","mapDispatchToProps","type","payload"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,eAA9C;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;;IACMC,U;;;;;;;;;;;;;;;;;;UAQJC,c,GAAiB,YAAM;AACrB,aAAO,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAA0B,UAAAC,KAAK,EAAI;AACxC,eAAOC,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACG,QAAjB,IAA6BF,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAApC;AACD,OAFM,CAAP;AAGD,K;;UAEDG,S,GAAY,YAAM;AAChB,UAAIC,WAAW,GAAGZ,CAAC,CAACa,IAAF,CAAO;AACvBC,QAAAA,OAAO,EAAE,gEADc;AAEvBC,QAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAFa,OAAP,CAAlB;AAIA,aAAO,MAAKZ,cAAL,GAAsBa,GAAtB,CAA2B,UAACT,KAAD,EAAQU,KAAR,EAAkB;AAClD,YAAMC,QAAQ,GAAG,CAACX,KAAK,CAACY,GAAP,EAAYZ,KAAK,CAACa,IAAlB,CAAjB;AACA,eACE,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEH,KAAb;AAAoB,UAAA,QAAQ,EAAEC,QAA9B;AAAwC,UAAA,IAAI,EAAEN,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGL,KAAK,CAACc,WADT,CADF,CADF;AAOD,OATM,CAAP;AAUD,K;;;;;;;wCA3BkB;AAAA;;AACjBC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0C,UAAAN,QAAQ,EAAI;AACpD,QAAA,MAAI,CAACd,KAAL,CAAWqB,kBAAX,CAA8BP,QAAQ,CAACQ,MAAvC;AACD,OAFD;AAGD;;;6BAyBQ;AACP,aACE,oBAAC,GAAD;AACE,QAAA,SAAS,EAAE,aADb;AAEE,QAAA,OAAO,EAAE,IAFX;AAGE,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,MAAT;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SAHT;AAIE,QAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWyB,QAJrB;AAKE,QAAA,IAAI,EAAE,EALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAC,wDADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAUG,KAAKlB,SAAL,EAVH,CADF;AAcD;;;;EA9CsBhB,S;;AAkDzB,IAAMmC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAOA,KAAP;AACD,CAFD;;AAGA,IAAMC,kBAAkB,GAAG;AACzBP,EAAAA,kBAAkB,EAAE,4BAACI,QAAD;AAAA,WAAe;AAACI,MAAAA,IAAI,EAAE,sBAAP;AAA+BC,MAAAA,OAAO,EAAEL;AAAxC,KAAf;AAAA;AADK,CAA3B;AAKA,eAAe5B,OAAO,CAAC6B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C9B,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\nimport L from 'leaflet'\nimport { connect } from 'react-redux'\n\n//alt map link\n//\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/rastertiles/voyager/{z}/{x}/{y}.png\"\nclass MapDisplay extends Component {\n\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition( position => {\n      this.props.addLocationToStore(position.coords)\n    })\n  }\n\n  filteredEvents = () => {\n    return this.props.events.filter( event => {\n      return Date.parse(event.datetime) > Date.parse(new Date())\n    })\n  }\n\n  renderPin = () => {\n    let currentIcon = L.icon({\n      iconUrl: 'https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon-2x.png',\n      iconSize: [18, 30]\n    })\n    return this.filteredEvents().map( (event, index) => {\n      const position = [event.lat, event.long]\n      return (\n        <Marker key={index} position={position} icon={currentIcon}>\n          <Popup>\n            {event.description}\n          </Popup>\n        </Marker>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <Map\n        className= \"map-display\"\n        animate={true}\n        style={{height: '93vh', width: '100%' }}\n        center={this.props.location}\n        zoom={14}\n      >\n        <TileLayer\n          url=\"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png\"\n        />\n        {this.renderPin()}\n      </Map>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\nconst mapDispatchToProps = {\n  addLocationToStore: (location) => ({type: \"ADD_CURRENT_LOCATION\", payload: location})\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapDisplay)\n"]},"metadata":{},"sourceType":"module"}