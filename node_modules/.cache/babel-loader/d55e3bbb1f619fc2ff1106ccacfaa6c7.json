{"ast":null,"code":"import _defineProperty from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/src/components/loginform.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport * as Const from '../const.js';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      accountType: \"\"\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.accountType) {\n        fetch(\"\".concat(Const.ENDPOINT).concat(_this.state.accountType, \"/login\"), {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: _this.state.email,\n            password: _this.state.password\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (account) {\n          if (account.id === 0) {\n            return alert(\"Invalid login.\");\n          } else {\n            localStorage.setItem(\"user\", account.id);\n            localStorage.setItem(\"accountType\", _this.state.accountType);\n\n            _this.props.addLoginAccountToStore(account);\n\n            _this.props.history.push(\"/events\");\n\n            if (_this.state.accountType === \"sponsors\") {\n              _this.props.markSponsorInStore();\n            }\n          }\n        });\n      } else {\n        return alert(\"Please select the account type.\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: true,\n        lg: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Welcome to Helping Hand\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(Form.Control, {\n        type: \"password\",\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"radio-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"accountType\",\n        name: \"accountType\",\n        value: \"sponsors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \"Sponsor \\xA0\\xA0\", React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"accountType\",\n        name: \"accountType\",\n        value: \"users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), \"Volunteer\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nvar mapDispatchToProps = {\n  addLoginAccountToStore: function addLoginAccountToStore(account) {\n    return {\n      type: \"ADD_LOGIN_ACCOUNT_TO_STORE\",\n      payload: account\n    };\n  },\n  markSponsorInStore: function markSponsorInStore() {\n    return {\n      type: \"LOGGED_IN_AS_SPONSOR\"\n    };\n  }\n};\nexport default withRouter(connect(null, mapDispatchToProps)(LoginForm));","map":{"version":3,"sources":["/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/src/components/loginform.js"],"names":["React","Component","Form","Button","Col","connect","withRouter","Const","LoginForm","state","email","password","accountType","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","fetch","ENDPOINT","method","headers","body","JSON","stringify","then","response","json","account","alert","localStorage","setItem","props","addLoginAccountToStore","history","push","markSponsorInStore","mapDispatchToProps","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Form, Button, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { withRouter} from \"react-router-dom\"\nimport * as Const from '../const.js'\n\nclass LoginForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    accountType: \"\",\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    if (this.state.accountType){\n      fetch(`${Const.ENDPOINT}${this.state.accountType}/login`,{\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      })\n      .then(response => response.json())\n      .then( account => {\n        if (account.id === 0) {\n          return alert(\"Invalid login.\")\n        } else {\n          localStorage.setItem(\"user\", account.id)\n          localStorage.setItem(\"accountType\", this.state.accountType)\n          this.props.addLoginAccountToStore(account)\n          this.props.history.push(\"/events\")\n          if (this.state.accountType === \"sponsors\"){\n            this.props.markSponsorInStore()\n          }\n        }\n      })\n    } else {\n      return alert(\"Please select the account type.\")\n    }\n\n  }\n\n  render(){\n    return(\n      <Form\n        onChange={this.handleChange}\n        onSubmit={this.handleSubmit}\n        className=\"justify-content-md-center\"\n      >\n        <Col xs lg=\"6\">\n          <h1 align= \"center\">Welcome to Helping Hand</h1>\n          <br /><br />\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email:</Form.Label>\n            <Form.Control type=\"text\" value={this.state.email} />\n            <Form.Text className=\"text-muted\">\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password:</Form.Label>\n            <Form.Control type=\"password\" value={this.state.password} />\n            <Form.Text className=\"text-muted\">\n            </Form.Text>\n          </Form.Group>\n          <div className=\"radio-button\">\n            <input\n              type=\"radio\"\n              id=\"accountType\"\n              name=\"accountType\"\n              value=\"sponsors\"\n            />\n              Sponsor\n              &nbsp;&nbsp;\n            <input\n              type=\"radio\"\n              id=\"accountType\"\n              name=\"accountType\"\n              value=\"users\"\n            />\n              Volunteer\n          </div><br /><br />\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </Col>\n      </Form>\n    )\n  }\n}\nconst mapDispatchToProps = {\n  addLoginAccountToStore: (account) => ({type: \"ADD_LOGIN_ACCOUNT_TO_STORE\", payload: account}),\n  markSponsorInStore: () => ({\n    type:\"LOGGED_IN_AS_SPONSOR\"\n  })\n}\n\n\nexport default withRouter(connect(null, mapDispatchToProps)(LoginForm))\n"]},"metadata":{},"sourceType":"module"}