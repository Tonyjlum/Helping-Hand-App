{"ast":null,"code":"import _classCallCheck from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/src/components/myevent.js\";\nimport React, { Component } from 'react';\nimport { Card, Button, Col, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport EditModal from './editmodal.js';\nimport Moment from 'react-moment';\nimport ConfirmContainer from '../container/confirmcontainer.js';\nimport * as Const from '../const.js';\n\nvar MyEvent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyEvent, _Component);\n\n  function MyEvent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyEvent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyEvent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editModalShow: false,\n      confirmContainerModalShow: false\n    };\n\n    _this.renderButtons = function (props) {\n      if (Date.parse(props.event.datetime) < Date.parse(new Date())) {\n        return _this.renderButtonsofPassEvents(props);\n      } else {\n        return _this.renderButtonsofUpcomingEvents(props);\n      }\n    };\n\n    _this.renderButtonsofPassEvents = function (props) {\n      if (props.event.coordinator_id === props.currentUser) {\n        return React.createElement(Button, {\n          variant: \"outline-success\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this.setState({\n              confirmContainerModalShow: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Confirm Volunteers\");\n      } else {\n        var attendance = props.confirm.attend ? \"Thank you for Volunteering\" : \"\";\n        return React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Event Completed. \".concat(attendance));\n      }\n    };\n\n    _this.renderButtonsofUpcomingEvents = function (props) {\n      if (props.event.coordinator_id === props.currentUser) {\n        return React.createElement(\"div\", {\n          className: \"space-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"outline-secondary\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this.setState({\n              editModalShow: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Edit Event\"), React.createElement(Button, {\n          variant: \"outline-danger\",\n          size: \"sm\",\n          onClick: function onClick() {\n            _this.handleDelete(props.event.id, props.confirm);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Delete Event\"));\n      } else {\n        return React.createElement(Button, {\n          variant: \"outline-danger\",\n          size: \"sm\",\n          onClick: function onClick() {\n            _this.handleLeave(props.confirm);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Leave Event\");\n      }\n    };\n\n    _this.handleLeave = function (confirm) {\n      fetch(\"\".concat(Const.ENDPOINT, \"confirms/\").concat(confirm.id), {\n        method: \"DELETE\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return _this.filterDeletedConfirm(json);\n      }).then(function (filteredConfirms) {\n        return _this.props.updateConfirms(filteredConfirms);\n      });\n    };\n\n    _this.handleDelete = function (event_id, confirm) {\n      fetch(\"\".concat(Const.ENDPOINT, \"events/\").concat(event_id), {\n        method: \"DELETE\"\n      }).then(function () {\n        var updatedCEI = _this.filterDeletedEventFromCEI(confirm);\n\n        _this.props.updateConfirms(updatedCEI);\n      });\n    };\n\n    _this.toggleEditModal = function () {\n      _this.setState({\n        editModalShow: !_this.state.editModalShow\n      });\n    };\n\n    _this.toggleConfrimModal = function () {\n      _this.setState({\n        confirmContainerModalShow: !_this.state.confirmContainerModalShow\n      });\n    };\n\n    _this.filterDeletedEventFromCEI = function (confirm) {\n      return _this.props.state.currentUser.confirm_event_info.filter(function (cei) {\n        return cei.confirm.id !== confirm.id;\n      });\n    };\n\n    _this.filterDeletedConfirm = function (json) {\n      return _this.props.state.currentUser.confirm_event_info.filter(function (cei) {\n        return cei.confirm.id !== json.destroyed_confirm_id;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MyEvent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Card.Body, {\n        className: \"my-event-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 7,\n        className: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.props.event.title), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        locale: \"en\",\n        format: \"MMMM DD, YYYY\",\n        date: this.props.event.datetime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), \"\\xA0at\\xA0\", React.createElement(Moment, {\n        locale: \"en\",\n        format: \"LT\",\n        date: this.props.event.datetime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.props.event.description)), this.renderButtons(this.props))))), React.createElement(EditModal, {\n        show: this.state.editModalShow,\n        onHide: this.toggleEditModal,\n        event: this.props.event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(ConfirmContainer, {\n        show: this.state.confirmContainerModalShow,\n        onHide: this.toggleConfrimModal,\n        event: this.props.event,\n        confirms: this.props.confirm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MyEvent;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nvar mapDispatchToProps = {\n  updateConfirms: function updateConfirms(updated_confrim) {\n    return {\n      type: \"UPDATE_CONFIRMS\",\n      payload: updated_confrim\n    };\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyEvent);","map":{"version":3,"sources":["/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/src/components/myevent.js"],"names":["React","Component","Card","Button","Col","Row","connect","EditModal","Moment","ConfirmContainer","Const","MyEvent","state","editModalShow","confirmContainerModalShow","renderButtons","props","Date","parse","event","datetime","renderButtonsofPassEvents","renderButtonsofUpcomingEvents","coordinator_id","currentUser","setState","attendance","confirm","attend","handleDelete","id","handleLeave","fetch","ENDPOINT","method","then","response","json","filterDeletedConfirm","filteredConfirms","updateConfirms","event_id","updatedCEI","filterDeletedEventFromCEI","toggleEditModal","toggleConfrimModal","confirm_event_info","filter","cei","destroyed_confirm_id","title","description","mapStateToProps","mapDispatchToProps","updated_confrim","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Card, Button, Col, Row} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport EditModal from './editmodal.js'\nimport Moment from 'react-moment'\nimport ConfirmContainer from '../container/confirmcontainer.js'\nimport * as Const from '../const.js'\n\nclass MyEvent extends Component {\n  state = {\n    editModalShow : false,\n    confirmContainerModalShow: false\n  }\n\n  renderButtons = (props) => {\n    if (Date.parse(props.event.datetime) < Date.parse(new Date()) ){\n      return this.renderButtonsofPassEvents(props)\n    } else {\n      return this.renderButtonsofUpcomingEvents(props)\n    }\n  }\n\n  renderButtonsofPassEvents = (props) => {\n    if (props.event.coordinator_id === props.currentUser){\n      return (\n        <Button\n          variant=\"outline-success\"\n          size=\"sm\"\n          onClick={() => this.setState({ confirmContainerModalShow: true })}\n        >\n          Confirm Volunteers\n        </Button>)\n    } else {\n      const attendance = props.confirm.attend ? \"Thank you for Volunteering\": \"\"\n      return (<Card.Text>{`Event Completed. ${attendance}`}</Card.Text>)\n    }\n  }\n\n  renderButtonsofUpcomingEvents = (props) => {\n    if (props.event.coordinator_id === props.currentUser){\n      return(\n        <div className=\"space-button\">\n          <Button\n            variant=\"outline-secondary\"\n            size=\"sm\"\n            onClick={() => this.setState({ editModalShow: true })}\n          >\n            Edit Event\n          </Button>\n          <Button\n            variant=\"outline-danger\"\n            size=\"sm\"\n            onClick = {() => {this.handleDelete(props.event.id, props.confirm)}}\n          >\n            Delete Event\n          </Button>\n        </div>\n      )\n    } else {\n      return (\n        <Button\n        variant=\"outline-danger\"\n        size=\"sm\"\n        onClick={()=>{this.handleLeave(props.confirm)}}\n        >\n          Leave Event\n        </Button>\n      )\n    }\n  }\n\n  handleLeave = (confirm) => {\n    fetch(`${Const.ENDPOINT}confirms/${confirm.id}`, {\n      method: \"DELETE\"\n    })\n    .then( response => response.json() )\n    .then( json => this.filterDeletedConfirm(json) )\n    .then( filteredConfirms => this.props.updateConfirms(filteredConfirms))\n  }\n\n  handleDelete = (event_id, confirm) => {\n    fetch(`${Const.ENDPOINT}events/${event_id}`,{\n      method: \"DELETE\"\n    })\n    .then( () => {\n      const updatedCEI = this.filterDeletedEventFromCEI(confirm)\n      this.props.updateConfirms(updatedCEI)\n    })\n  }\n\n  toggleEditModal = () => {\n    this.setState({\n      editModalShow: !this.state.editModalShow\n    })\n  }\n\n  toggleConfrimModal = () => {\n    this.setState({\n      confirmContainerModalShow: !this.state.confirmContainerModalShow\n    })\n  }\n\n  filterDeletedEventFromCEI = (confirm) => {\n    return this.props.state.currentUser.confirm_event_info.filter( cei => {\n      return cei.confirm.id  !== confirm.id\n    })\n  }\n\n  filterDeletedConfirm = (json) => {\n    return this.props.state.currentUser.confirm_event_info.filter( cei => {\n      return cei.confirm.id !== json.destroyed_confirm_id\n    })\n  }\n\n  render(){\n    return (\n      <>\n        <Card.Body className=\"my-event-card\">\n          <Card className=\"text-center\">\n            <Row className=\"justify-content-md-center\">\n              <Col xs={7} className>\n                <Card.Body>\n                  <Card.Title>{this.props.event.title}</Card.Title>\n                  <Card.Text>\n                    <Moment\n                      locale=\"en\"\n                      format=\"MMMM DD, YYYY\"\n                      date={this.props.event.datetime}\n                    />\n                    &nbsp;at&nbsp;\n                    <Moment\n                      locale=\"en\"\n                      format=\"LT\"\n                      date={this.props.event.datetime}\n                    />\n                  </Card.Text>\n                  <Card.Text>{this.props.event.description}</Card.Text>\n                </Card.Body>\n                {this.renderButtons(this.props)}\n              </Col>\n            </Row>\n          </Card>\n        </Card.Body>\n        <EditModal\n          show={this.state.editModalShow}\n          onHide={this.toggleEditModal}\n          event={this.props.event}\n        />\n        <ConfirmContainer\n          show={this.state.confirmContainerModalShow}\n          onHide={this.toggleConfrimModal}\n          event={this.props.event}\n          confirms={this.props.confirm}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {state}\n}\n\n\nconst mapDispatchToProps = {\n  updateConfirms: (updated_confrim) => ({type: \"UPDATE_CONFIRMS\", payload: updated_confrim})\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyEvent)\n"]},"metadata":{},"sourceType":"module"}