{"ast":null,"code":"import _defineProperty from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/src/components/newaccountform.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport * as Const from '../const.js';\n\nvar NewAccountFrom =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewAccountFrom, _Component);\n\n  function NewAccountFrom() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewAccountFrom);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewAccountFrom)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      first_name: \"\",\n      last_name: \"\"\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      fetch(\"\".concat(Const.ENDPOINT).concat(_this.props.accountType), {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: _this.state.email,\n          password: _this.state.password,\n          first_name: _this.state.first_name,\n          last_name: _this.state.last_name\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (user) {\n        _this.props.addLoginAccountToStore(user);\n\n        _this.props.history.push(\"/login\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewAccountFrom, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: true,\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Welcome to Helping Hand\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        controlId: \"first_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"First Name:\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.first_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"last_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Last Name:\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.last_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"yourname@example.com\",\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(Form.Control, {\n        type: \"password\",\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Make Account\")));\n    }\n  }]);\n\n  return NewAccountFrom;\n}(Component);\n\nvar mapDispatchToProps = {\n  addLoginAccountToStore: function addLoginAccountToStore(account) {\n    return {\n      type: \"ADD_LOGIN_ACCOUNT_TO_STORE\",\n      payload: account\n    };\n  }\n};\nexport default withRouter(connect(null, mapDispatchToProps)(NewAccountFrom));","map":{"version":3,"sources":["/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/src/components/newaccountform.js"],"names":["React","Component","Form","Button","Col","connect","withRouter","Const","NewAccountFrom","state","email","password","first_name","last_name","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","fetch","ENDPOINT","props","accountType","method","headers","body","JSON","stringify","then","response","json","user","addLoginAccountToStore","history","push","mapDispatchToProps","account","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { withRouter} from \"react-router-dom\"\nimport * as Const from '../const.js'\n\nclass NewAccountFrom extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    fetch(`${Const.ENDPOINT}${this.props.accountType}`,{\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        first_name: this.state.first_name,\n        last_name: this.state.last_name\n      })\n    })\n    .then(response => response.json())\n    .then(user => {\n      this.props.addLoginAccountToStore(user)\n      this.props.history.push(\"/login\")\n    })\n  }\n\n\n  render() {\n    return (\n      <Form\n        onChange={this.handleChange}\n        onSubmit={this.handleSubmit}\n        className=\"justify-content-md-center\"\n      >\n      <Col xs lg=\"12\">\n      <h1>Welcome to Helping Hand</h1>\n      <br /><br />\n      <Form.Group controlId=\"first_name\">\n        <Form.Label>First Name:</Form.Label>\n        <Form.Control type=\"text\" value={this.state.first_name} />\n        <Form.Text className=\"text-muted\">\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"last_name\">\n        <Form.Label>Last Name:</Form.Label>\n        <Form.Control type=\"text\" value={this.state.last_name} />\n        <Form.Text className=\"text-muted\">\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"email\">\n        <Form.Label>Email:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"yourname@example.com\"\n          value={this.state.email}\n        />\n        <Form.Text className=\"text-muted\">\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"password\">\n        <Form.Label>Password:</Form.Label>\n        <Form.Control type=\"password\" value={this.state.password} />\n        <Form.Text className=\"text-muted\">\n        </Form.Text>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" >\n        Make Account\n      </Button>\n      </Col>\n      </Form>\n    );\n  }\n\n}\n\nconst mapDispatchToProps = {\n  addLoginAccountToStore: (account) => ({type: \"ADD_LOGIN_ACCOUNT_TO_STORE\", payload: account})\n}\n\n\nexport default withRouter(connect(null, mapDispatchToProps) (NewAccountFrom))\n"]},"metadata":{},"sourceType":"module"}