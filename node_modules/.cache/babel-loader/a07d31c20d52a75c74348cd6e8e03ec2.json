{"ast":null,"code":"import _classCallCheck from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/src/components/event.js\";\nimport React, { Component } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport DonationModal from './donationmodal.js';\nimport * as Const from '../const.js';\n\nvar Event =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Event, _Component);\n\n  function Event() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Event);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Event)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userButtonToggle: false,\n      sponsorButtonToggle: false\n    };\n\n    _this.fundedColor = function () {\n      return _this.props.donation === 0 ? \"danger\" : \"primary\";\n    };\n\n    _this.joinEventButton = function (slot) {\n      return React.createElement(Button, {\n        disabled: _this.state.userButtonToggle,\n        onClick: function onClick() {\n          _this.handleClick(_this.props.event.id);\n        },\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \" \", \"Join: \".concat(slot, \" slots left\"));\n    };\n\n    _this.userButton = function () {\n      var slot = _this.props.event.max_volunteers - _this.props.event.confirms.length;\n\n      var already_attending = _this.props.event.confirms.map(function (c) {\n        return c.user_id;\n      }).includes(_this.props.state.currentUser.id);\n\n      if (already_attending) {\n        return React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Attending\");\n      } else {\n        return slot > 0 ? _this.joinEventButton(slot) : \"This event is full\";\n      }\n    };\n\n    _this.sponsorButton = function () {\n      var sponsor_ids = _this.props.event.donations.map(function (donation) {\n        return donation.sponsor_id;\n      });\n\n      if (!sponsor_ids.includes(_this.props.state.currentUser.id)) {\n        return React.createElement(Button, {\n          size: \"sm\",\n          onClick: _this.toggleSponsorButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Sponsor This Event\");\n      }\n    };\n\n    _this.toggleSponsorButton = function () {\n      _this.setState({\n        sponsorButtonToggle: !_this.state.sponsorButtonToggle\n      });\n    };\n\n    _this.sponsorCount = function () {\n      if (_this.props.event.donations.length > 1) {\n        return \" \".concat(_this.props.event.donations.length, \" sponsors\");\n      } else {\n        return \" a sponsor\";\n      }\n    };\n\n    _this.eventDiscription = function () {\n      if (_this.props.event.description.length > 160) {\n        return \"\".concat(_this.props.event.description.slice(0, 157), \"...\");\n      } else {\n        return _this.props.event.description;\n      }\n    };\n\n    _this.handleClick = function (event_id) {\n      _this.setState({\n        userButtonToggle: !_this.state.userButtonToggle\n      });\n\n      fetch(\"\".concat(Const.ENDPOINT, \"confirms\"), {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: _this.props.state.currentUser.id,\n          event_id: event_id\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (confirm_event_info) {\n        return _this.props.addConfirms(confirm_event_info);\n      }).then(fetch(\"\".concat(Const.ENDPOINT, \"events\")).then(function (response) {\n        return response.json();\n      }).then(function (events) {\n        return _this.props.addEventsToStore(events);\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(Event, [{\n    key: \"render\",\n    value: function render(props) {\n      var _this2 = this;\n\n      return React.createElement(Card, {\n        border: this.fundedColor(),\n        className: \"shadow\",\n        onClick: function onClick() {\n          return _this2.props.changeLocation(_this2.props.event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        className: \"shadow-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.props.event.title), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.eventDiscription())), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        locale: \"en\",\n        format: \"MMMM DD, YYYY\",\n        className: \"date-event-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.props.event.datetime), \"\\xA0at\\xA0\", React.createElement(Moment, {\n        format: \"LT\",\n        className: \"time-event-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.props.event.datetime))), this.props.state.sponsor ? this.sponsorButton() : this.userButton()), React.createElement(Card.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \" Coordinated by: \", this.props.event.coordinator_name), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.props.donation ? \"Funded: $\".concat(this.props.donation, \" by \").concat(this.sponsorCount()) : \"This project has not been funded\")), React.createElement(DonationModal, {\n        show: this.state.sponsorButtonToggle,\n        onHide: this.toggleSponsorButton,\n        event: this.props.event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Event;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nvar mapDispatchToProps = {\n  addEventsToStore: function addEventsToStore(events) {\n    return {\n      type: \"ADD_EVENTS\",\n      payload: events\n    };\n  },\n  addConfirms: function addConfirms(confirm_event_info) {\n    return {\n      type: \"ADD_CONFIRMS\",\n      payload: confirm_event_info\n    };\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Event);","map":{"version":3,"sources":["/Users/tonylum/Desktop/hostongitpages/Helping-Hand-App/src/components/event.js"],"names":["React","Component","Button","Card","Moment","connect","DonationModal","Const","Event","state","userButtonToggle","sponsorButtonToggle","fundedColor","props","donation","joinEventButton","slot","handleClick","event","id","userButton","max_volunteers","confirms","length","already_attending","map","c","user_id","includes","currentUser","sponsorButton","sponsor_ids","donations","sponsor_id","toggleSponsorButton","setState","sponsorCount","eventDiscription","description","slice","event_id","fetch","ENDPOINT","method","headers","body","JSON","stringify","then","response","json","confirm_event_info","addConfirms","events","addEventsToStore","changeLocation","title","datetime","sponsor","coordinator_name","mapStateToProps","mapDispatchToProps","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card } from 'react-bootstrap'\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux'\nimport DonationModal from './donationmodal.js'\nimport * as Const from '../const.js'\n\nclass Event extends Component {\n  state = {\n    userButtonToggle: false,\n    sponsorButtonToggle: false\n  }\n\n  fundedColor = () => {\n    return this.props.donation === 0 ? \"danger\" : \"primary\"\n  }\n\n  joinEventButton = (slot) => {\n    return <Button disabled={this.state.userButtonToggle} onClick={() => {this.handleClick(this.props.event.id)}} size=\"sm\"> {`Join: ${slot} slots left`}</Button>\n  }\n\n  userButton = () => {\n    const slot = this.props.event.max_volunteers - this.props.event.confirms.length\n    const already_attending = this.props.event.confirms.map(c => c.user_id).includes(this.props.state.currentUser.id)\n    if (already_attending) {\n      return <strong>Attending</strong>\n    } else {\n      return slot > 0 ? this.joinEventButton(slot) : `This event is full`\n    }\n  }\n\n  sponsorButton = () => {\n    const sponsor_ids = this.props.event.donations.map( donation => donation.sponsor_id)\n    if (!sponsor_ids.includes(this.props.state.currentUser.id)){\n      return <Button size=\"sm\" onClick={this.toggleSponsorButton}>Sponsor This Event</Button>\n    }\n  }\n\n  toggleSponsorButton = () => {\n    this.setState({\n      sponsorButtonToggle: !this.state.sponsorButtonToggle\n    })\n  }\n\n  sponsorCount = () => {\n    if (this.props.event.donations.length > 1) {\n      return ` ${this.props.event.donations.length} sponsors`\n    } else {\n      return \" a sponsor\"\n    }\n  }\n\n  eventDiscription = () =>{\n    if (this.props.event.description.length > 160) {\n      return `${this.props.event.description.slice(0,157)}...`\n    } else {\n      return this.props.event.description\n    }\n  }\n\n  handleClick = (event_id) => {\n    this.setState({\n      userButtonToggle: !this.state.userButtonToggle\n    })\n    fetch(`${Const.ENDPOINT}confirms`,{\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: this.props.state.currentUser.id,\n        event_id: event_id\n      })\n    })\n    .then(response => response.json())\n    .then(confirm_event_info => this.props.addConfirms(confirm_event_info))\n    .then(fetch(`${Const.ENDPOINT}events`)\n      .then(response => response.json())\n      .then (events => this.props.addEventsToStore(events))\n    )\n  }\n\n  render(props) {\n    return (\n      <Card\n        border={this.fundedColor()}\n        className=\"shadow\"\n        onClick={() => this.props.changeLocation(this.props.event)}>\n        <Card.Body className=\"shadow-sm\">\n          <Card.Title>{this.props.event.title}</Card.Title>\n          <Card.Text><small>{this.eventDiscription()}</small></Card.Text>\n          <Card.Text>\n            <small>\n              <Moment\n              locale=\"en\"\n              format=\"MMMM DD, YYYY\"\n              className= \"date-event-card\"\n              >\n                {this.props.event.datetime}\n              </Moment>\n              &nbsp;at&nbsp;\n              <Moment\n              format=\"LT\"\n              className=\"time-event-card\"\n              >\n                {this.props.event.datetime}\n              </Moment>\n            </small>\n          </Card.Text>\n          {this.props.state.sponsor ? this.sponsorButton() : this.userButton()}\n        </Card.Body>\n        <Card.Footer>\n          <small> Coordinated by: {this.props.event.coordinator_name}</small> <br />\n          <small className=\"text-muted\">\n            {this.props.donation ? `Funded: $${this.props.donation} by ${this.sponsorCount()}` : \"This project has not been funded\"}\n          </small>\n        </Card.Footer>\n        <DonationModal show={this.state.sponsorButtonToggle} onHide={this.toggleSponsorButton} event={this.props.event} />\n      </Card>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {state}\n}\n\nconst mapDispatchToProps = {\n  addEventsToStore: (events) => ({type: \"ADD_EVENTS\", payload: events}),\n  addConfirms: (confirm_event_info) => ({type: \"ADD_CONFIRMS\", payload: confirm_event_info}),\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Event);\n"]},"metadata":{},"sourceType":"module"}